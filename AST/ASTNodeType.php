<?php

namespace AST;

class ASTNodeType implements ASTNodeTypeInterface {

	/*Properties
	**
	**
	*/

	// STRUCTURE

	public const PROGRAM = 'PROGRAM';
	public const PROCEDURE = 'PROCEDURE';
	public const FUNCTION = 'FUNCTION';
	public const BLOCK = 'BLOCK';

	// STATEMENTS

	public const COMPOUND_STATEMENT = 'COMPOUND_STATEMENT';
	public const ASSIGNMENT_STATEMENT = 'ASSIGNMENT_STATEMENT';
	public const PROCEDURES_STATEMENT = 'PROCEDURES_STATEMENT';
	public const IF_STATEMENT = 'IF_STATEMENT';
	public const SELECT_STATEMENT = 'SELECT_STATEMENT';
	public const SELECT_BRANCH_STATEMENT = 'SELECT_BRANCH_STATEMENT';
	public const LOOP_STATEMENT = 'LOOP_STATEMENT';
	public const SELECT_CONSTANTS_STATEMENT = 'SELECT_CONSTANTS_STATEMENT';
	public const NOOP = 'NOOP';
	public const TEST_STATEMENT = 'TEST_STATEMENT';
	public const CALL_STATEMENT = 'CALL_STATEMENT';
	public const PARAMETERS_STATEMENT = 'PARAMETERS_STATEMENT';
	public const WHILE_STATEMENT = 'WHILE_STATEMENT';
	
	//ADD, SUBTRACT, OR, NEGATE

	public const ADD_OPERATOR = 'ADD_OPERATOR';
	public const SUBTRACT_OPERATOR = 'SUBTRACT_OPERATOR';
	public const OR_OPERATOR = 'OR_OPERATOR';
	public const NEGATE_OPERATOR = 'NEGATE_OPERATOR';

	// MULTIPLY, INTEGER DIVIDE, FLOAT DIVIDE, MODULUS, AND

	public const MULTIPLICATION_OPERATOR = 'MULTIPLICATION_OPERATOR';
	public const INTEGER_DIVISION_OPERATOR = 'INTEGER_DIVISION_OPERATOR';
	public const FLOAT_DIVISION_OPERATOR = 'FLOAT_DIVISION_OPERATOR';
	public const MODULUS_OPERATOR = 'MODULUS_OPERATOR';
	public const AND_OPERATOR = 'AND_OPERATOR';

	// EQUAL, NOT EQUAL, LESS THAN, LESS THAN EQUAL, GREATER THAN, GREATER THAN EQUAL

	public const EQUAL = 'EQUAL';
	public const NOT_EQUAL = 'NOT_EQUAL';
	public const LESS_THAN = 'LESS_THAN';
	public const LESS_THAN_EQUAL = 'LESS_THAN_EQUAL';
	public const GREATER_THAN = 'GREATER_THAN';
	public const GREATER_THAN_EQUAL = 'GREATER_THAN_EQUAL';

	// OPERANDS

	public const VARIABLE = 'VARIABLE';
	public const SUBSCRIPTS = 'SUBSCRIPTS';
	public const FIELD = 'FIELD';
	public const BOOLEAN_CONSTANT = 'BOOLEAN_CONSTANT';
	public const INTEGER_CONSTANT = 'INTEGER_CONSTANT';
	public const REAL_CONSTANT = 'REAL_CONSTANT';
	public const STRING_CONSTANT = 'STRING_CONSTANT';

	/*Methods
	**
	**
	*/

}
